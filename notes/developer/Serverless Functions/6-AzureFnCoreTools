Azure Function core tools:

Set of command line tools that can be used to develop and test azure functions on your local computer

Main Purpose:
1. generate files and folders
2. run functions locally so we can test and debug them
3. publish functions to azure


Creating functions locally:

- function app has lot of functions which are written in a same language and share same config values
- locally a functions project ~ function app on azure, it has many functions in it

- func init => creates a new function project
 func init asks stuff like which language to run
 - host.json - stores runtime config values like logging options
 - local.settings.json - config values which apply to function app when they run in local

- func new => creates a new function in the function folder
- asks which function trigger you want to use and the name for the function

- func start => When functions run in azure env, the host on which they run is automatically invoked and run, but locally you need to write this command.

Publishing the app from local:

func azure functionapp publish <app_name>

-The Core Tools do not validate or test your functions code during publishing. Make sure to use func start to do some testing before you publish!
-When you publish, any functions already present in the target app are stopped and deleted before the contents of your project are deployed. You can't combine functions from multiple projects into one app by publishing them in sequence - all of the functions you want in the app must be in one project.
-Publishing to Azure does not create any kind of relationship between the local project and the target function app. You can publish a single functions project to multiple function apps. You can also re-publish a project to the same app repeatedly as you work on your code.
-The invocation URLs displayed after you publish may include a code parameter in the query string, as in the screenshot above. By default, HTTP functions created by the Core Tools are configured with an authorization level of function, meaning they require callers to provide a secret key in the request headers or query string. The Core Tools includes the key in the query string of the displayed URL for your convenience.


